import requests
from datetime import datetime
from requests.structures import CaseInsensitiveDict
from typing import Dict, Any, Optional


def scan_headers(url: str) -> Dict[str, Any]:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ü–µ–ª–µ–≤–æ–≥–æ URL.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö security-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è
    –∏ –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    Args:
        url (str): URL –≤–µ–±-—Å–∞–π—Ç–∞ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å http/https –∏–ª–∏ –±–µ–∑.
    Returns:
        Dict[str, Any]: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:
            - target (str): –ò—Å—Ö–æ–¥–Ω—ã–π URL
            - date (str): –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            - headers (List[Dict]): –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            - issues (List[str]): –°–ø–∏—Å–æ–∫ –≤—ã—è–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
            - security_score (int): –û—Ü–µ–Ω–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (0-100)
            - total_headers (int): –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            - error (bool): –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
    Raises:
        –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é - –≤—Å–µ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏
        –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –ø–æ–ª–µ 'error' —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
    Example:
        >>> results = scan_headers("https://example.com")
        >>> print(results["security_score"])
        75
        >>> print(results["issues"])
        ["‚ùå X-Frame-Options –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî Clickjacking"]
    """
    print(f"üéØ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {url}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result: Dict[str, Any] = {
        "target": url,
        "date": datetime.now().strftime("%Y-%m-%d %H:%M"),
        "headers": [],
        "issues": [],
        "security_score": 0,
        "total_headers": 8,
        "error": False
    }

    try:
        print("üîó –í—ã–ø–æ–ª–Ω—è–µ–º HTTP –∑–∞–ø—Ä–æ—Å...")

        # –≠–º—É–ª–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–∞–∑–æ–≤–æ–π –∑–∞—â–∏—Ç—ã
        headers: Dict[str, str] = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
            'Accept-Encoding': 'gzip, deflate, br',
            'Connection': 'keep-alive',
            'Upgrade-Insecure-Requests': '1',
        }

        # –í—ã–ø–æ–ª–Ω—è–µ–º HTTP GET –∑–∞–ø—Ä–æ—Å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        response: requests.Response = requests.get(
            url,
            timeout=15,  # –¢–∞–π–º–∞—É—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏–π
            headers=headers,  # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
            allow_redirects=True,  # –°–ª–µ–¥–æ–≤–∞—Ç—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º
            verify=True  # –ü—Ä–æ–≤–µ—Ä—è—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        )

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º case-insensitive —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        response_headers: CaseInsensitiveDict = CaseInsensitiveDict(response.headers)

        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üì® –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: {list(response_headers.keys())}")

        # –°–ª–æ–≤–∞—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã—Ö security-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º–∏ —Ä–∏—Å–∫–æ–≤
        headers_to_check: Dict[str, str] = {
            "Content-Security-Policy": "–£—è–∑–≤–∏–º–æ—Å—Ç—å –∫ XSS",
            "Strict-Transport-Security": "Downgrade-–∞—Ç–∞–∫–∏ —á–µ—Ä–µ–∑ HTTP",
            "X-Frame-Options": "Clickjacking",
            "X-Content-Type-Options": "MIME-sniffing",
            "Referrer-Policy": "–£—Ç–µ—á–∫–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞",
            "Permissions-Policy": "–î–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±—Ä–∞—É–∑era",
            "X-XSS-Protection": "–ó–∞—â–∏—Ç–∞ –æ—Ç XSS",
            "Cache-Control": "–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
        }

        found_count: int = 0
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π security-–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑ –Ω–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞
        for header, risk in headers_to_check.items():
            present: bool = header in response_headers
            header_value: Optional[str] = response_headers.get(header)
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥–æ–ª–æ–≤–∫–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            result["headers"].append({
                "name": header,
                "present": present,
                "value": header_value,
                "risk": risk
            })
            if present:
                found_count += 1
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫: {header} = {header_value[:100] if header_value else 'None'}...")

                # –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
                if header == "Content-Security-Policy":
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–ø–∞—Å–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–∏–≤ –≤ CSP
                    if "'unsafe-inline'" in header_value:
                        result["issues"].append(f"‚ö†Ô∏è {header} —Å–æ–¥–µ—Ä–∂–∏—Ç 'unsafe-inline' - —Å–Ω–∏–∂–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
                    if "'unsafe-eval'" in header_value:
                        result["issues"].append(f"‚ö†Ô∏è {header} —Å–æ–¥–µ—Ä–∂–∏—Ç 'unsafe-eval' - —Å–Ω–∏–∂–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
                elif header == "Strict-Transport-Security":
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HSTS
                    if "max-age=0" in header_value:
                        result["issues"].append(f"‚ö†Ô∏è {header} –∏–º–µ–µ—Ç max-age=0 - HSTS –æ—Ç–∫–ª—é—á–µ–Ω")
                elif header == "X-Frame-Options":
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è X-Frame-Options
                    if header_value.upper() not in ["DENY", "SAMEORIGIN"]:
                        result["issues"].append(f"‚ö†Ô∏è {header} –∏–º–µ–µ—Ç –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {header_value}")
            else:
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º
                result["issues"].append(f"‚ùå {header} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî {risk}")
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫: {header}")
        # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
        result["security_score"] = int((found_count / len(headers_to_check)) * 100)
        print(f"üìä –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. Score: {result['security_score']}%")
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: {found_count}/{len(headers_to_check)}")
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ—Ü–µ–Ω–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ score
        if result["security_score"] >= 80:
            result["issues"].insert(0, "‚úÖ –û—Ç–ª–∏—á–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤!")
        elif result["security_score"] >= 60:
            result["issues"].insert(0, "‚ö†Ô∏è –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        else:
            result["issues"].insert(0, "üö® –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    except requests.exceptions.Timeout:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
        error_msg = "‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (–±–æ–ª–µ–µ 15 —Å–µ–∫—É–Ω–¥)"
        print(error_msg)
        result["error"] = True
        result["issues"].append(error_msg)
    except requests.exceptions.ConnectionError:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (DNS, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π —Ö–æ—Å—Ç –∏ —Ç.–¥.)
        error_msg = "üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∞–π—Ç—É"
        print(error_msg)
        result["error"] = True
        result["issues"].append(error_msg)
    except requests.exceptions.RequestException as e:
        # –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ requests
        error_msg = f"üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {str(e)}"
        print(error_msg)
        result["error"] = True
        result["issues"].append(error_msg)
    except Exception as e:
        # –ü–µ—Ä–µ—Ö–≤–∞—Ç –ª—é–±—ã—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        error_msg = f"‚öôÔ∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"
        print(error_msg)
        result["error"] = True
        result["issues"].append(error_msg)
    return result
