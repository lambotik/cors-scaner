import os
from flask import Flask, request, render_template, jsonify
from flask_cors import CORS
from scanner import scan_headers
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

app = Flask(__name__)
# –í–∫–ª—é—á–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤, —á—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
CORS(app)

# –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Limiter
limiter = Limiter(
    get_remote_address,
    app=app,
    default_limits=["200 per day", "50 per hour"]
)


@app.route("/", methods=["GET", "POST"])
@limiter.limit("10 per minute")  # –ë–æ–ª–µ–µ —Ä–∞–∑—É–º–Ω—ã–π –ª–∏–º–∏—Ç –¥–ª—è —Ñ–æ—Ä–º—ã
def index():
    """
    –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    GET: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ URL
    POST: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã, —Å–∫–∞–Ω–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç—á—ë—Ç
    Returns:
        render_template: HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ä–º–æ–π –∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    try:
        if request.method == "POST":
            # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ —Ñ–æ—Ä–º—ã
            url = request.form.get("url")
            if not url:
                return "–û—à–∏–±–∫–∞: URL –Ω–µ —É–∫–∞–∑–∞–Ω", 400
            print(f"üîç –°–∫–∞–Ω–∏—Ä—É–µ–º URL: {url}")
            # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            results = scan_headers(url)
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {results}")
            # –†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ω –æ—Ç—á—ë—Ç–∞ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            return render_template("report.html", **results)
        # GET –∑–∞–ø—Ä–æ—Å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ñ–æ—Ä–º–æ–π
        return render_template("index.html")
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        return f"–û—à–∏–±–∫–∞: {str(e)}", 500


@app.route("/api/scan", methods=["POST"])
@limiter.limit("5 per minute")  # –û—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –¥–ª—è API
def api_scan():
    """
    REST API endpoint –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
    Expected JSON:
        {"url": "https://example.com"}
    Returns:
        jsonify: JSON –æ–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—à–∏–±–∫–æ–π
    Example response:
        {
            "target": "https://example.com",
            "security_score": 75,
            "headers": [...],
            "issues": [...]
        }
    """
    # –ü–æ–ª—É—á–∞–µ–º JSON –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    data = request.get_json()

    if not data:
        return jsonify({"error": "JSON –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã"}), 400

    url = data.get('url')

    if not url:
        return jsonify({"error": "URL –Ω–µ —É–∫–∞–∑–∞–Ω"}), 400

    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º JSON —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        results = scan_headers(url)
        return jsonify(results)
    except Exception as e:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
        return jsonify({"error": str(e)}), 500


@app.route("/test-scan")
@limiter.limit("2 per minute")  # –õ–∏–º–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
def test_scan():
    """
    –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∫–∞–Ω–µ—Ä–∞.
    –°–∫–∞–Ω–∏—Ä—É–µ—Ç google.com –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—ã—Ä—ã–µ JSON –¥–∞–Ω–Ω—ã–µ.
    –ü–æ–ª–µ–∑–µ–Ω –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏.
    Returns:
        jsonify: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è google.com
    """
    try:
        results = scan_headers("https://google.com")
        return jsonify(results)
    except Exception as e:
        return jsonify({"error": str(e)}), 500


@app.errorhandler(429)
def ratelimit_handler(e):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤.
    """
    return jsonify({
        "error": "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤",
        "message": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
        "limits": {
            "form": "10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
            "api": "5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É",
            "test": "2 –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–∏–Ω—É—Ç—É"
        }
    }), 429


# –î–æ–±–∞–≤–∏–º —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏ 429 –æ—à–∏–±–∫–µ
@app.errorhandler(429)
def handle_ratelimit_html(e):
    if request.accept_mimetypes.accept_html:
        return render_template('rate_limit.html'), 429
    return ratelimit_handler(e)


if __name__ == "__main__":
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è Render) –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º 5000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    port = int(os.environ.get("PORT", 5000))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ—Ä—Ç–æ–º
    # debug=False –¥–ª—è production –æ–∫—Ä—É–∂–µ–Ω–∏—è
    app.run(host="0.0.0.0", port=port, debug=False)