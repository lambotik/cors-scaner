import os
from flask import Flask, request, render_template, jsonify, send_from_directory
from flask_cors import CORS
from scanner import scan_headers

app = Flask(__name__, static_folder='static', template_folder='templates')
# –í–∫–ª—é—á–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤, —á—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
CORS(app)


# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è favicon
@app.route('/favicon.ico')
def favicon():
    return send_from_directory(os.path.join(app.root_path, 'static'),
                               'favicon.ico', mimetype='image/x-icon')


@app.route("/", methods=["GET", "POST"])
def index():
    """
    –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    try:
        if request.method == "POST":
            url = request.form.get("url")
            if not url:
                return render_template("index.html", error="–û—à–∏–±–∫–∞: URL –Ω–µ —É–∫–∞–∑–∞–Ω")
            print(f"üîç –°–∫–∞–Ω–∏—Ä—É–µ–º URL: {url}")
            results = scan_headers(url)
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã, –æ—Ü–µ–Ω–∫–∞: {results.get('security_score', 0)}%")

            # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
            return render_template("report.html", **results)
        return render_template("index.html")
    except Exception as e:
        return render_template("index.html", error=f"–û—à–∏–±–∫–∞: {str(e)}")


@app.route("/api/scan", methods=["POST"])
def api_scan():
    """
    REST API endpoint –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
    """
    data = request.get_json()

    if not data:
        return jsonify({"error": "JSON –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã"}), 400

    url = data.get('url')

    if not url:
        return jsonify({"error": "URL –Ω–µ —É–∫–∞–∑–∞–Ω"}), 400

    try:
        results = scan_headers(url)
        return jsonify(results)
    except Exception as e:
        return jsonify({"error": str(e)}), 500


@app.route("/test-scan")
def test_scan():
    """
    –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∫–∞–Ω–µ—Ä–∞.
    """
    try:
        results = scan_headers("https://google.com")
        return jsonify(results)
    except Exception as e:
        return jsonify({"error": str(e)}), 500


# –£–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∞—Ö –∏–∑ —à–∞–±–ª–æ–Ω–∞ report.html
@app.route("/report-template-fix")
def report_template_fix():
    """
    –í—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∞–±–ª–æ–Ω–∞ –±–µ–∑ –ª–∏–º–∏—Ç–æ–≤
    """
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    test_results = {
        'target': 'https://example.com',
        'date': '2024-01-15 14:30:00',
        'security_score': 75,
        'scan_duration': 2.5,
        'http_status': 200,
        'present_headers': 8,
        'total_headers': 11,
        'headers': [
            {
                'name': 'Content-Security-Policy',
                'present': True,
                'value': "default-src 'self'",
                'risk': '–ù–∏–∑–∫–∏–π',
                'critical': True
            },
            {
                'name': 'Strict-Transport-Security',
                'present': False,
                'value': None,
                'risk': '–í—ã—Å–æ–∫–∏–π',
                'critical': True
            }
        ],
        'issues': [
            "‚ùå HSTS –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã downgrade –∞—Ç–∞–∫–∏ –Ω–∞ HTTPS",
            "‚ö†Ô∏è CORS –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤ (Access-Control-Allow-Origin: *)"
        ]
    }
    return render_template("report.html", **test_results)


if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É templates –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists('templates'):
        os.makedirs('templates')

    port = int(os.environ.get("PORT", 5000))
    print(f"üöÄ –ó–∞–ø—É—Å–∫ CORS Scanner –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    print("üìä –õ–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
    app.run(host="0.0.0.0", port=port, debug=True)